<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on linux)" generated="20190809 21:00:56.315" rpa="false">
<suite id="s1" name="Tests" source="/opt/robotframework/tests">
<suite id="s1-s1" name="Faker" source="/opt/robotframework/tests/faker.robot">
<test id="s1-s1-t1" name="Can Get Fake Name">
<kw name="Name" library="FakerLibrary">
<doc>:example 'John Doe'</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20190809 21:00:57.059" level="INFO">${name} = Robert Brown</msg>
<status status="PASS" starttime="20190809 21:00:57.058" endtime="20190809 21:00:57.060"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20190809 21:00:57.060" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20190809 21:00:57.060" endtime="20190809 21:00:57.060"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190809 21:00:57.058" endtime="20190809 21:00:57.060" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Two Calls To Faker Should Give Different Results">
<kw name="Name" library="FakerLibrary">
<doc>:example 'John Doe'</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20190809 21:00:57.063" level="INFO">${name} = David Williams</msg>
<status status="PASS" starttime="20190809 21:00:57.062" endtime="20190809 21:00:57.063"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20190809 21:00:57.064" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20190809 21:00:57.063" endtime="20190809 21:00:57.064"></status>
</kw>
<kw name="Name" library="FakerLibrary">
<doc>:example 'John Doe'</doc>
<assign>
<var>${name2}</var>
</assign>
<msg timestamp="20190809 21:00:57.065" level="INFO">${name2} = Charles Dickerson</msg>
<status status="PASS" starttime="20190809 21:00:57.064" endtime="20190809 21:00:57.065"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${name2}</arg>
</arguments>
<msg timestamp="20190809 21:00:57.066" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20190809 21:00:57.065" endtime="20190809 21:00:57.066"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${name}</arg>
<arg>${name2}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:57.066" endtime="20190809 21:00:57.066"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190809 21:00:57.061" endtime="20190809 21:00:57.067" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Can call Words with integer argument">
<kw name="Words" library="FakerLibrary">
<doc>:returns: An array of random words. for example: ['Lorem', 'ipsum', 'dolor']</doc>
<arguments>
<arg>nb=${10}</arg>
</arguments>
<assign>
<var>${WordsList}</var>
</assign>
<msg timestamp="20190809 21:00:57.070" level="INFO">${WordsList} = ['contain', 'natural', 'church', 'statement', 'avoid', 'information', 'political', 'bill', 'Mrs', 'miss']</msg>
<status status="PASS" starttime="20190809 21:00:57.069" endtime="20190809 21:00:57.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${WordsList}</arg>
</arguments>
<msg timestamp="20190809 21:00:57.071" level="INFO">['contain', 'natural', 'church', 'statement', 'avoid', 'information', 'political', 'bill', 'Mrs', 'miss']</msg>
<status status="PASS" starttime="20190809 21:00:57.070" endtime="20190809 21:00:57.071"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${WordsList}</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20190809 21:00:57.071" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190809 21:00:57.071" endtime="20190809 21:00:57.071"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190809 21:00:57.067" endtime="20190809 21:00:57.071" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Can call Words with str integer argument">
<kw name="Words" library="FakerLibrary">
<doc>:returns: An array of random words. for example: ['Lorem', 'ipsum', 'dolor']</doc>
<arguments>
<arg>nb=10</arg>
</arguments>
<assign>
<var>${WordsList}</var>
</assign>
<msg timestamp="20190809 21:00:57.073" level="INFO">${WordsList} = ['kid', 'energy', 'Democrat', 'month', 'customer', 'skill', 'six', 'record', 'seat', 'woman']</msg>
<status status="PASS" starttime="20190809 21:00:57.073" endtime="20190809 21:00:57.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${WordsList}</arg>
</arguments>
<msg timestamp="20190809 21:00:57.074" level="INFO">['kid', 'energy', 'Democrat', 'month', 'customer', 'skill', 'six', 'record', 'seat', 'woman']</msg>
<status status="PASS" starttime="20190809 21:00:57.073" endtime="20190809 21:00:57.074"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${WordsList}</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20190809 21:00:57.075" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190809 21:00:57.074" endtime="20190809 21:00:57.075"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190809 21:00:57.072" endtime="20190809 21:00:57.075" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Can call SHA-1">
<kw name="Sha 1" library="FakerLibrary">
<doc>Calculates the sha1 hash of a given string
:example 'b5d86317c2a144cd04d0d7c03b2b02666fafadf2'</doc>
<status status="PASS" starttime="20190809 21:00:57.077" endtime="20190809 21:00:57.077"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Calculates the sha1 hash of a given string
:example 'b5d86317c2a144cd04d0d7c03b2b02666fafadf2'</doc>
<arguments>
<arg>${True}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:57.077" endtime="20190809 21:00:57.078"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Calculates the sha1 hash of a given string
:example 'b5d86317c2a144cd04d0d7c03b2b02666fafadf2'</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:57.078" endtime="20190809 21:00:57.078"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Calculates the sha1 hash of a given string
:example 'b5d86317c2a144cd04d0d7c03b2b02666fafadf2'</doc>
<arguments>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:57.078" endtime="20190809 21:00:57.079"></status>
</kw>
<kw name="Sha 1" library="FakerLibrary">
<doc>Calculates the sha1 hash of a given string
:example 'b5d86317c2a144cd04d0d7c03b2b02666fafadf2'</doc>
<arguments>
<arg>False</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:57.079" endtime="20190809 21:00:57.079"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190809 21:00:57.076" endtime="20190809 21:00:57.080" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Can Lexify">
<kw name="Lexify" library="FakerLibrary">
<doc>Replaces all question mark ('?') occurrences with a random letter.</doc>
<arguments>
<arg>blah???</arg>
</arguments>
<assign>
<var>${lexed}</var>
</assign>
<msg timestamp="20190809 21:00:57.082" level="INFO">${lexed} = blahLqD</msg>
<status status="PASS" starttime="20190809 21:00:57.082" endtime="20190809 21:00:57.082"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${lexed}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20190809 21:00:57.083" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20190809 21:00:57.082" endtime="20190809 21:00:57.083"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${lexed}</arg>
<arg>blah</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:57.083" endtime="20190809 21:00:57.083"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190809 21:00:57.081" endtime="20190809 21:00:57.083" critical="yes"></status>
</test>
<test id="s1-s1-t7" name="Can call Password">
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.086" level="INFO">${pass} = #xVto@DD#1</msg>
<status status="PASS" starttime="20190809 21:00:57.085" endtime="20190809 21:00:57.086"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20190809 21:00:57.087" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20190809 21:00:57.086" endtime="20190809 21:00:57.087"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>${5}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.088" level="INFO">${pass} = ^9Epd</msg>
<status status="PASS" starttime="20190809 21:00:57.087" endtime="20190809 21:00:57.088"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20190809 21:00:57.088" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190809 21:00:57.088" endtime="20190809 21:00:57.089"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.089" level="INFO">${pass} = g&amp;6Un</msg>
<status status="PASS" starttime="20190809 21:00:57.089" endtime="20190809 21:00:57.089"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20190809 21:00:57.090" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20190809 21:00:57.090" endtime="20190809 21:00:57.090"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>special_chars=${False}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.091" level="INFO">${pass} = aayadJbUS3</msg>
<status status="PASS" starttime="20190809 21:00:57.091" endtime="20190809 21:00:57.091"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>special_chars=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.092" level="INFO">${pass} = th3o+eYme!</msg>
<status status="PASS" starttime="20190809 21:00:57.091" endtime="20190809 21:00:57.092"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>digits=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.092" level="INFO">${pass} = )0YMyAwn#*</msg>
<status status="PASS" starttime="20190809 21:00:57.092" endtime="20190809 21:00:57.092"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>digits=${False}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.093" level="INFO">${pass} = FuFbOvk%^M</msg>
<status status="PASS" starttime="20190809 21:00:57.093" endtime="20190809 21:00:57.093"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>digits=True</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.093" level="INFO">${pass} = P7br+7Uk$J</msg>
<status status="PASS" starttime="20190809 21:00:57.093" endtime="20190809 21:00:57.094"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>digits=False</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.094" level="INFO">${pass} = vQV(huMQ)@</msg>
<status status="PASS" starttime="20190809 21:00:57.094" endtime="20190809 21:00:57.094"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>upper_case=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.095" level="INFO">${pass} = _qP%kPtG0^</msg>
<status status="PASS" starttime="20190809 21:00:57.095" endtime="20190809 21:00:57.095"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>lower_case=${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.096" level="INFO">${pass} = k9DNegUr^B</msg>
<status status="PASS" starttime="20190809 21:00:57.095" endtime="20190809 21:00:57.096"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>digits=${False}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.096" level="INFO">${pass} = YAFwuij!*W</msg>
<status status="PASS" starttime="20190809 21:00:57.096" endtime="20190809 21:00:57.096"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>5823</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.100" level="INFO">${pass} = ZS+NqRWmUoz(jaREg!ZQZNQBaqeOCEOq!((e%pEAXAK*(oo%CGjxeFlQRXnJddC+JrgQ^LNg$UaJBJ%GiRVT+MoQ#LCiWgtxQb!ZKwm!Cj#WYbrliWc#UPsC#Y+WIyGazXJBo%KmVBPpkUICx#p+^we^fFHQw+t(INjeTKeO_yLPFjUHQg*D%dqqn%C(dXkJYQ&amp;N+#)f...</msg>
<status status="PASS" starttime="20190809 21:00:57.097" endtime="20190809 21:00:57.100"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5823</arg>
</arguments>
<msg timestamp="20190809 21:00:57.100" level="INFO">Length is 5823</msg>
<status status="PASS" starttime="20190809 21:00:57.100" endtime="20190809 21:00:57.100"></status>
</kw>
<kw name="Password" library="FakerLibrary">
<doc>Generates a random password.
@param length: Integer. Length of a password
@param special_chars: Boolean. Whether to use special characters !@#$%^&amp;*()_+
@param digits: Boolean. Whether to use digits
@param upper_case: Boolean. Whether to use upper letters
@param lower_case: Boolean. Whether to use lower letters
@return: String. Random password</doc>
<arguments>
<arg>${5823}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${pass}</var>
</assign>
<msg timestamp="20190809 21:00:57.104" level="INFO">${pass} = ICg#mpyQsTKXnMUhzyG&amp;p^ydKlFbeYPwDPUKpmI*pHUYScmbr+rUfMWKidfFHm+fAuHs_VGLxVYRNOPSNmLs%RAi@Uzi_DkcDz^UyCp&amp;k#TSTEP&amp;HAP^UZkXnl$j^qf!RSMHOzgpjSpVy&amp;FcmcEhErUP$RaPnMOgnrw()bOpBEdF(HR$gf!ngoAB(^FzRCxPbtUiwwyC...</msg>
<status status="PASS" starttime="20190809 21:00:57.100" endtime="20190809 21:00:57.104"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${pass}</arg>
<arg>5823</arg>
</arguments>
<msg timestamp="20190809 21:00:57.104" level="INFO">Length is 5823</msg>
<status status="PASS" starttime="20190809 21:00:57.104" endtime="20190809 21:00:57.105"></status>
</kw>
<tags>
<tag>faker</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20190809 21:00:57.084" endtime="20190809 21:00:57.105" critical="yes"></status>
</test>
<status status="PASS" starttime="20190809 21:00:56.353" endtime="20190809 21:00:57.105"></status>
</suite>
<suite id="s1-s2" name="Requests" source="/opt/robotframework/tests/requests.robot">
<test id="s1-s2-t1" name="Get Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>google</arg>
<arg>http://www.google.com</arg>
</arguments>
<msg timestamp="20190809 21:00:57.418" level="INFO">Creating Session using : alias=google, url=http://www.google.com, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:57.418" endtime="20190809 21:00:57.419"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>bing</arg>
<arg>https://www.bing.com</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20190809 21:00:57.419" level="INFO">Creating Session using : alias=bing, url=https://www.bing.com, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:57.419" endtime="20190809 21:00:57.420"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>google</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:57.534" level="INFO">Get Request using : alias=google, uri=/, headers=None json=None</msg>
<msg timestamp="20190809 21:00:57.534" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.420" endtime="20190809 21:00:57.535"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:57.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.535" endtime="20190809 21:00:57.535"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bing</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:57.861" level="INFO">Get Request using : alias=bing, uri=/, headers=None json=None</msg>
<msg timestamp="20190809 21:00:57.861" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.535" endtime="20190809 21:00:57.861"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:57.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.861" endtime="20190809 21:00:57.862"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:57.417" endtime="20190809 21:00:57.862" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Get Requests with Url Parameters">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:57.863" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:57.863" endtime="20190809 21:00:57.864"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20190809 21:00:57.865" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20190809 21:00:57.864" endtime="20190809 21:00:57.865"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:57.990" level="INFO">Get Request using : alias=httpbin, uri=/get, headers=None json=None</msg>
<msg timestamp="20190809 21:00:57.990" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.865" endtime="20190809 21:00:57.990"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:57.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.990" endtime="20190809 21:00:57.991"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg timestamp="20190809 21:00:57.991" level="INFO">To JSON using : content={
  "args": {
    "key": "value", 
    "key2": "value2"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.22.0"
  }, 
  "origin": "65.36.127.113, 65.36.127.113", 
  "url": "https://httpbin.org/get?key=value&amp;key2=value2"
}
 </msg>
<msg timestamp="20190809 21:00:57.991" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190809 21:00:57.991" level="INFO">${jsondata} = {'args': {'key': 'value', 'key2': 'value2'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.22.0'}, 'origin': '65.36.127.113, ...</msg>
<status status="PASS" starttime="20190809 21:00:57.991" endtime="20190809 21:00:57.991"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${jsondata['args']}</arg>
<arg>${params}</arg>
</arguments>
<msg timestamp="20190809 21:00:57.992" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.991" endtime="20190809 21:00:57.992"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:57.862" endtime="20190809 21:00:57.992" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Get HTTPS &amp; Verify Cert">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>https://httpbin.org</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20190809 21:00:57.993" level="INFO">Creating Session using : alias=httpbin, url=https://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:57.993" endtime="20190809 21:00:57.994"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.206" level="INFO">Get Request using : alias=httpbin, uri=/get, headers=None json=None</msg>
<msg timestamp="20190809 21:00:58.206" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:57.994" endtime="20190809 21:00:58.206"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:58.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.207" endtime="20190809 21:00:58.207"></status>
</kw>
<tags>
<tag>get</tag>
<tag>get-cert</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:57.992" endtime="20190809 21:00:58.207" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Post Request With URL Params">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:58.209" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:58.209" endtime="20190809 21:00:58.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20190809 21:00:58.211" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20190809 21:00:58.211" endtime="20190809 21:00:58.212"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.310" level="INFO">Post Request using : alias=httpbin, uri=/post, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:58.310" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.212" endtime="20190809 21:00:58.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:58.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.310" endtime="20190809 21:00:58.311"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.208" endtime="20190809 21:00:58.311" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Post Request With No Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:58.311" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:58.311" endtime="20190809 21:00:58.312"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.413" level="INFO">Post Request using : alias=httpbin, uri=/post, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:58.413" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.312" endtime="20190809 21:00:58.413"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:58.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.414" endtime="20190809 21:00:58.415"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.311" endtime="20190809 21:00:58.415" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Put Request With No Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:58.417" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:58.416" endtime="20190809 21:00:58.417"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.525" level="INFO">Put Request using : alias=httpbin, uri=/put, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:58.525" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.417" endtime="20190809 21:00:58.525"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:58.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.526" endtime="20190809 21:00:58.526"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.415" endtime="20190809 21:00:58.526" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Post Request With No Dictionary">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20190809 21:00:58.529" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20190809 21:00:58.528" endtime="20190809 21:00:58.530"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${data}</arg>
<arg>some content</arg>
</arguments>
<msg timestamp="20190809 21:00:58.532" level="INFO">${data} = some content</msg>
<status status="PASS" starttime="20190809 21:00:58.530" endtime="20190809 21:00:58.532"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.632" level="INFO">Post Request using : alias=httpbin, uri=/post, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:58.632" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.532" endtime="20190809 21:00:58.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:58.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.632" endtime="20190809 21:00:58.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>${data}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:58.634" endtime="20190809 21:00:58.634"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.527" endtime="20190809 21:00:58.634" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Put Request With URL Params">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:58.636" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:58.635" endtime="20190809 21:00:58.637"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20190809 21:00:58.638" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20190809 21:00:58.637" endtime="20190809 21:00:58.638"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>params=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.750" level="INFO">Put Request using : alias=httpbin, uri=/put, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:58.750" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.638" endtime="20190809 21:00:58.750"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:58.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.751" endtime="20190809 21:00:58.751"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.635" endtime="20190809 21:00:58.751" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Put Request With No Dictionary">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:58.753" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:58.752" endtime="20190809 21:00:58.753"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${data}</arg>
<arg>some content</arg>
</arguments>
<msg timestamp="20190809 21:00:58.754" level="INFO">${data} = some content</msg>
<status status="PASS" starttime="20190809 21:00:58.753" endtime="20190809 21:00:58.755"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.859" level="INFO">Put Request using : alias=httpbin, uri=/put, data=some content,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:58.859" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.755" endtime="20190809 21:00:58.859"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:58.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.860" endtime="20190809 21:00:58.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>${data}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:58.860" endtime="20190809 21:00:58.860"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.751" endtime="20190809 21:00:58.860" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="Post Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:58.861" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:58.861" endtime="20190809 21:00:58.861"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190809 21:00:58.862" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20190809 21:00:58.861" endtime="20190809 21:00:58.862"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20190809 21:00:58.862" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20190809 21:00:58.862" endtime="20190809 21:00:58.862"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:58.964" level="INFO">Post Request using : alias=httpbin, uri=/post, data=name=bulkan&amp;surname=evcimen, headers={'Content-Type': 'application/x-www-form-urlencoded'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:58.965" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.862" endtime="20190809 21:00:58.965"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:58.965" endtime="20190809 21:00:58.965"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:58.965" endtime="20190809 21:00:58.966"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.861" endtime="20190809 21:00:58.966" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Post With Unicode Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20190809 21:00:58.967" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20190809 21:00:58.967" endtime="20190809 21:00:58.967"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=度假村</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190809 21:00:58.968" level="INFO">&amp;{data} = { name=度假村 }</msg>
<status status="PASS" starttime="20190809 21:00:58.968" endtime="20190809 21:00:58.968"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20190809 21:00:58.969" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20190809 21:00:58.969" endtime="20190809 21:00:58.969"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:59.078" level="INFO">Post Request using : alias=httpbin, uri=/post, data=name=%E5%BA%A6%E5%81%87%E6%9D%91, headers={'Content-Type': 'application/x-www-form-urlencoded'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:59.078" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:58.969" endtime="20190809 21:00:59.078"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>度假村</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:59.078" endtime="20190809 21:00:59.079"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:58.966" endtime="20190809 21:00:59.079" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="Post Request With Unicode Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20190809 21:00:59.080" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20190809 21:00:59.080" endtime="20190809 21:00:59.080"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=度假村</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190809 21:00:59.081" level="INFO">&amp;{data} = { name=度假村 }</msg>
<status status="PASS" starttime="20190809 21:00:59.081" endtime="20190809 21:00:59.081"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20190809 21:00:59.082" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20190809 21:00:59.081" endtime="20190809 21:00:59.082"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:59.185" level="INFO">Post Request using : alias=httpbin, uri=/post, data=name=%E5%BA%A6%E5%81%87%E6%9D%91, headers={'Content-Type': 'application/x-www-form-urlencoded'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:59.185" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:59.082" endtime="20190809 21:00:59.185"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>度假村</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:59.185" endtime="20190809 21:00:59.186"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:59.079" endtime="20190809 21:00:59.186" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Post Request With Data and File">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:59.188" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:59.188" endtime="20190809 21:00:59.189"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=mallikarjunarao</arg>
<arg>surname=kosuri</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190809 21:00:59.190" level="INFO">&amp;{data} = { name=mallikarjunarao | surname=kosuri }</msg>
<status status="PASS" starttime="20190809 21:00:59.189" endtime="20190809 21:00:59.190"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>foobar.txt</arg>
<arg>content=foobar</arg>
</arguments>
<msg timestamp="20190809 21:00:59.191" level="INFO" html="yes">Created file '&lt;a href="file:///foobar.txt"&gt;/foobar.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190809 21:00:59.190" endtime="20190809 21:00:59.191"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>foobar.txt</arg>
</arguments>
<assign>
<var>${file_data}</var>
</assign>
<msg timestamp="20190809 21:00:59.192" level="INFO" html="yes">Getting file '&lt;a href="file:///foobar.txt"&gt;/foobar.txt&lt;/a&gt;'.</msg>
<msg timestamp="20190809 21:00:59.192" level="INFO">${file_data} = foobar</msg>
<status status="PASS" starttime="20190809 21:00:59.191" endtime="20190809 21:00:59.192"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>file=${file_data}</arg>
</arguments>
<assign>
<var>&amp;{files}</var>
</assign>
<msg timestamp="20190809 21:00:59.193" level="INFO">&amp;{files} = { file=foobar }</msg>
<status status="PASS" starttime="20190809 21:00:59.192" endtime="20190809 21:00:59.193"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/post</arg>
<arg>files=${files}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:59.316" level="INFO">Post Request using : alias=httpbin, uri=/post, data=&lt;empty&gt;, headers=None, files={'file': 'foobar'}, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:59.316" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:59.193" endtime="20190809 21:00:59.316"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:59.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:59.317" endtime="20190809 21:00:59.319"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:59.187" endtime="20190809 21:00:59.319" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Put Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:59.328" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:59.326" endtime="20190809 21:00:59.329"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190809 21:00:59.332" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20190809 21:00:59.330" endtime="20190809 21:00:59.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20190809 21:00:59.333" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20190809 21:00:59.332" endtime="20190809 21:00:59.333"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:59.442" level="INFO">Put Request using : alias=httpbin, uri=/put, data=name=bulkan&amp;surname=evcimen,                     headers={'Content-Type': 'application/x-www-form-urlencoded'}, allow_redirects=True </msg>
<msg timestamp="20190809 21:00:59.442" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:59.333" endtime="20190809 21:00:59.442"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:59.442" endtime="20190809 21:00:59.443"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20190809 21:00:59.444" endtime="20190809 21:00:59.444"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:59.322" endtime="20190809 21:00:59.445" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Head Request">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:59.447" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:59.447" endtime="20190809 21:00:59.448"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/headers</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:00:59.703" level="INFO">Head Request using : alias=httpbin, uri=/headers, headers=None,         allow_redirects=False </msg>
<msg timestamp="20190809 21:00:59.703" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:59.449" endtime="20190809 21:00:59.704"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:00:59.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:00:59.704" endtime="20190809 21:00:59.705"></status>
</kw>
<tags>
<tag>head</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:59.445" endtime="20190809 21:00:59.705" critical="yes"></status>
</test>
<test id="s1-s2-t16" name="Options Request">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:00:59.708" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:00:59.707" endtime="20190809 21:00:59.708"></status>
</kw>
<kw name="Options Request" library="RequestsLibrary">
<doc>Send an OPTIONS request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/headers</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:02.879" level="INFO">Options Request using : alias=httpbin, uri=/headers, headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:02.879" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:00:59.709" endtime="20190809 21:01:02.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:02.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:02.879" endtime="20190809 21:01:02.879"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.headers}</arg>
<arg>allow</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:02.879" endtime="20190809 21:01:02.880"></status>
</kw>
<tags>
<tag>options</tag>
</tags>
<status status="PASS" starttime="20190809 21:00:59.706" endtime="20190809 21:01:02.880" critical="yes"></status>
</test>
<test id="s1-s2-t17" name="Delete Request With URL Params">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:01:02.881" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:02.881" endtime="20190809 21:01:02.882"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20190809 21:01:02.883" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" starttime="20190809 21:01:02.882" endtime="20190809 21:01:02.883"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
<arg>${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:02.987" level="INFO">Delete Request using : alias=httpbin, uri=/delete, data=key=value&amp;key2=value2,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:02.988" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:02.883" endtime="20190809 21:01:02.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:02.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:02.988" endtime="20190809 21:01:02.988"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:02.880" endtime="20190809 21:01:02.988" critical="yes"></status>
</test>
<test id="s1-s2-t18" name="Delete Request With No Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:01:02.989" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:02.989" endtime="20190809 21:01:02.990"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.099" level="INFO">Delete Request using : alias=httpbin, uri=/delete, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:03.099" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:02.990" endtime="20190809 21:01:03.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:03.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.099" endtime="20190809 21:01:03.100"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:02.989" endtime="20190809 21:01:03.100" critical="yes"></status>
</test>
<test id="s1-s2-t19" name="Delete Request With Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20190809 21:01:03.101" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20190809 21:01:03.101" endtime="20190809 21:01:03.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190809 21:01:03.102" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20190809 21:01:03.102" endtime="20190809 21:01:03.102"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.204" level="INFO">Delete Request using : alias=httpbin, uri=/delete, data=name=bulkan&amp;surname=evcimen,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:03.204" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.102" endtime="20190809 21:01:03.204"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:03.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.204" endtime="20190809 21:01:03.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20190809 21:01:03.205" level="INFO">{
  "args": {}, 
  "data": "name=bulkan&amp;surname=evcimen", 
  "files": {}, 
  "form": {}, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Content-Length": "27", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.22.0"
  }, 
  "json": null, 
  "origin": "65.36.127.113, 65.36.127.113", 
  "url": "https://httpbin.org/delete"
}
</msg>
<status status="PASS" starttime="20190809 21:01:03.205" endtime="20190809 21:01:03.206"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['data']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:03.206" endtime="20190809 21:01:03.206"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['data']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:03.206" endtime="20190809 21:01:03.206"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:03.100" endtime="20190809 21:01:03.206" critical="yes"></status>
</test>
<test id="s1-s2-t20" name="Patch Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:01:03.208" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:03.207" endtime="20190809 21:01:03.208"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20190809 21:01:03.209" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" starttime="20190809 21:01:03.209" endtime="20190809 21:01:03.209"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20190809 21:01:03.210" level="INFO">&amp;{headers} = { Content-Type=application/x-www-form-urlencoded }</msg>
<status status="PASS" starttime="20190809 21:01:03.209" endtime="20190809 21:01:03.210"></status>
</kw>
<kw name="Patch Request" library="RequestsLibrary">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/patch</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.312" level="INFO">Patch Request using : alias=httpbin, uri=/patch, data=name=bulkan&amp;surname=evcimen,                     headers={'Content-Type': 'application/x-www-form-urlencoded'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:03.312" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.211" endtime="20190809 21:01:03.312"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:03.313" endtime="20190809 21:01:03.313"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()['form']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:03.313" endtime="20190809 21:01:03.314"></status>
</kw>
<tags>
<tag>patch</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:03.207" endtime="20190809 21:01:03.314" critical="yes"></status>
</test>
<test id="s1-s2-t21" name="Get Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20190809 21:01:03.317" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20190809 21:01:03.316" endtime="20190809 21:01:03.318"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.471" level="INFO">Get Request using : alias=httpbin, uri=/redirect/1, headers=None json=None</msg>
<msg timestamp="20190809 21:01:03.472" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.318" endtime="20190809 21:01:03.472"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:03.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.472" endtime="20190809 21:01:03.473"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.579" level="INFO">Get Request using : alias=httpbin, uri=/redirect/1, headers=None json=None</msg>
<msg timestamp="20190809 21:01:03.580" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.473" endtime="20190809 21:01:03.580"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:03.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.580" endtime="20190809 21:01:03.581"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:03.315" endtime="20190809 21:01:03.581" critical="yes"></status>
</test>
<test id="s1-s2-t22" name="Get Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:01:03.587" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:03.585" endtime="20190809 21:01:03.589"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.697" level="INFO">Get Request using : alias=httpbin, uri=/redirect/1, headers=None json=None</msg>
<msg timestamp="20190809 21:01:03.697" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.589" endtime="20190809 21:01:03.698"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190809 21:01:03.698" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20190809 21:01:03.698" endtime="20190809 21:01:03.698"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:03.699" endtime="20190809 21:01:03.699"></status>
</kw>
<tags>
<tag>get</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:03.583" endtime="20190809 21:01:03.699" critical="yes"></status>
</test>
<test id="s1-s2-t23" name="Options Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:01:03.701" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:03.700" endtime="20190809 21:01:03.701"></status>
</kw>
<kw name="Options Request" library="RequestsLibrary">
<doc>Send an OPTIONS request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.810" level="INFO">Options Request using : alias=httpbin, uri=/redirect/1, headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:03.810" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.701" endtime="20190809 21:01:03.810"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:03.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.810" endtime="20190809 21:01:03.810"></status>
</kw>
<kw name="Options Request" library="RequestsLibrary">
<doc>Send an OPTIONS request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:03.864" level="INFO">Options Request using : alias=httpbin, uri=/redirect/1, headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:03.864" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.811" endtime="20190809 21:01:03.864"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:03.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.865" endtime="20190809 21:01:03.865"></status>
</kw>
<tags>
<tag>options</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:03.700" endtime="20190809 21:01:03.865" critical="yes"></status>
</test>
<test id="s1-s2-t24" name="Head Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:01:03.866" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:03.865" endtime="20190809 21:01:03.866"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:04.018" level="INFO">Head Request using : alias=httpbin, uri=/redirect/1, headers=None,         allow_redirects=True </msg>
<msg timestamp="20190809 21:01:04.018" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:03.866" endtime="20190809 21:01:04.018"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:04.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.018" endtime="20190809 21:01:04.019"></status>
</kw>
<tags>
<tag>head</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:03.865" endtime="20190809 21:01:04.019" critical="yes"></status>
</test>
<test id="s1-s2-t25" name="Head Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20190809 21:01:04.020" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:04.020" endtime="20190809 21:01:04.021"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:04.123" level="INFO">Head Request using : alias=httpbin, uri=/redirect/1, headers=None,         allow_redirects=False </msg>
<msg timestamp="20190809 21:01:04.123" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.021" endtime="20190809 21:01:04.123"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190809 21:01:04.124" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20190809 21:01:04.123" endtime="20190809 21:01:04.124"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:04.124" endtime="20190809 21:01:04.124"></status>
</kw>
<kw name="Head Request" library="RequestsLibrary">
<doc>Send a HEAD request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/redirect/1</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:04.177" level="INFO">Head Request using : alias=httpbin, uri=/redirect/1, headers=None,         allow_redirects=False </msg>
<msg timestamp="20190809 21:01:04.177" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.124" endtime="20190809 21:01:04.177"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190809 21:01:04.177" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20190809 21:01:04.177" endtime="20190809 21:01:04.177"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:04.177" endtime="20190809 21:01:04.178"></status>
</kw>
<tags>
<tag>head</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:04.019" endtime="20190809 21:01:04.178" critical="yes"></status>
</test>
<test id="s1-s2-t26" name="Post Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
</arguments>
<msg timestamp="20190809 21:01:04.178" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:04.178" endtime="20190809 21:01:04.179"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:04.432" level="INFO">Post Request using : alias=jigsaw, uri=/HTTP/300/302.html, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:04.432" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.179" endtime="20190809 21:01:04.432"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:04.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.432" endtime="20190809 21:01:04.433"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:04.585" level="INFO">Post Request using : alias=jigsaw, uri=/HTTP/300/302.html, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:04.585" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.433" endtime="20190809 21:01:04.585"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:04.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.585" endtime="20190809 21:01:04.585"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:04.178" endtime="20190809 21:01:04.585" critical="yes"></status>
</test>
<test id="s1-s2-t27" name="Post Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20190809 21:01:04.586" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20190809 21:01:04.586" endtime="20190809 21:01:04.587"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:04.741" level="INFO">Post Request using : alias=jigsaw, uri=/HTTP/300/302.html, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=False </msg>
<msg timestamp="20190809 21:01:04.742" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.587" endtime="20190809 21:01:04.742"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190809 21:01:04.743" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20190809 21:01:04.742" endtime="20190809 21:01:04.744"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:04.744" endtime="20190809 21:01:04.747"></status>
</kw>
<tags>
<tag>post</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:04.586" endtime="20190809 21:01:04.747" critical="yes"></status>
</test>
<test id="s1-s2-t28" name="Put Request With Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20190809 21:01:04.751" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" starttime="20190809 21:01:04.750" endtime="20190809 21:01:04.753"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:05.034" level="INFO">Put Request using : alias=jigsaw, uri=/HTTP/300/302.html, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:05.034" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:04.753" endtime="20190809 21:01:05.034"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:05.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.034" endtime="20190809 21:01:05.035"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${true}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:05.193" level="INFO">Put Request using : alias=jigsaw, uri=/HTTP/300/302.html, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190809 21:01:05.193" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.035" endtime="20190809 21:01:05.193"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:05.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.193" endtime="20190809 21:01:05.194"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:04.748" endtime="20190809 21:01:05.194" critical="yes"></status>
</test>
<test id="s1-s2-t29" name="Put Request Without Redirection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jigsaw</arg>
<arg>http://jigsaw.w3.org</arg>
</arguments>
<msg timestamp="20190809 21:01:05.195" level="INFO">Creating Session using : alias=jigsaw, url=http://jigsaw.w3.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190809 21:01:05.195" endtime="20190809 21:01:05.196"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jigsaw</arg>
<arg>/HTTP/300/302.html</arg>
<arg>allow_redirects=${false}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:05.347" level="INFO">Put Request using : alias=jigsaw, uri=/HTTP/300/302.html, data=None,                     headers=None, allow_redirects=False </msg>
<msg timestamp="20190809 21:01:05.347" level="INFO">${resp} = &lt;Response [302]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.196" endtime="20190809 21:01:05.347"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.status_code}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190809 21:01:05.347" level="INFO">${status} = 302</msg>
<status status="PASS" starttime="20190809 21:01:05.347" endtime="20190809 21:01:05.347"></status>
</kw>
<kw name="Should Start With" library="BuiltIn">
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<arguments>
<arg>${status}</arg>
<arg>30</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.347" endtime="20190809 21:01:05.347"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:05.195" endtime="20190809 21:01:05.348" critical="yes"></status>
</test>
<test id="s1-s2-t30" name="Do Not Pretty Print a JSON object">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Define json variable.</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.348" endtime="20190809 21:01:05.349"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key_one=true</arg>
<arg>key_two=this is a test string</arg>
</arguments>
<assign>
<var>&amp;{var}</var>
</assign>
<msg timestamp="20190809 21:01:05.350" level="INFO">&amp;{var} = { key_one=true | key_two=this is a test string }</msg>
<status status="PASS" starttime="20190809 21:01:05.349" endtime="20190809 21:01:05.350"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>httpbin</arg>
<arg>/get</arg>
<arg>params=${var}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190809 21:01:05.404" level="INFO">Get Request using : alias=httpbin, uri=/get, headers=None json=None</msg>
<msg timestamp="20190809 21:01:05.404" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.350" endtime="20190809 21:01:05.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190809 21:01:05.405" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.405" endtime="20190809 21:01:05.405"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190809 21:01:05.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.405" endtime="20190809 21:01:05.405"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${jsondata}</var>
</assign>
<msg timestamp="20190809 21:01:05.406" level="INFO">To JSON using : content={
  "args": {
    "key_one": "true", 
    "key_two": "this is a test string"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.22.0"
  }, 
  "origin": "65.36.127.113, 65.36.127.113", 
  "url": "https://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}
 </msg>
<msg timestamp="20190809 21:01:05.406" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190809 21:01:05.406" level="INFO">${jsondata} = {'args': {'key_one': 'true', 'key_two': 'this is a test string'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.22.0'}, 'orig...</msg>
<status status="PASS" starttime="20190809 21:01:05.405" endtime="20190809 21:01:05.406"></status>
</kw>
<kw name="Dictionaries Should Be Equal" library="Collections">
<doc>Fails if the given dictionaries are not equal.</doc>
<arguments>
<arg>${jsondata['args']}</arg>
<arg>${var}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.406" endtime="20190809 21:01:05.406"></status>
</kw>
<tags>
<tag>json</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:05.348" endtime="20190809 21:01:05.406" critical="yes"></status>
</test>
<test id="s1-s2-t31" name="Pretty Print a JSON object">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Define json variable.</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.408" endtime="20190809 21:01:05.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190809 21:01:05.408" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.408" endtime="20190809 21:01:05.409"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190809 21:01:05.409" level="INFO">To JSON using : content={
  "args": {
    "key_one": "true", 
    "key_two": "this is a test string"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.22.0"
  }, 
  "origin": "65.36.127.113, 65.36.127.113", 
  "url": "https://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}
 </msg>
<msg timestamp="20190809 21:01:05.409" level="INFO">To JSON using : pretty_print=True </msg>
<msg timestamp="20190809 21:01:05.409" level="INFO">${output} = {
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Host": "http...</msg>
<status status="PASS" starttime="20190809 21:01:05.409" endtime="20190809 21:01:05.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190809 21:01:05.410" level="INFO">{
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Host": "httpbin.org",
        "User-Agent": "python-requests/2.22.0"
    },
    "origin": "65.36.127.113, 65.36.127.113",
    "url": "https://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}</msg>
<status status="PASS" starttime="20190809 21:01:05.410" endtime="20190809 21:01:05.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_one": "true"</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.410" endtime="20190809 21:01:05.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_two": "this is a test string"</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.410" endtime="20190809 21:01:05.410"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>{u'key_two': u'this is a test string', u'key_one': u'true'}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.411" endtime="20190809 21:01:05.411"></status>
</kw>
<tags>
<tag>json</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:05.407" endtime="20190809 21:01:05.411" critical="yes"></status>
</test>
<test id="s1-s2-t32" name="Set Pretty Print to non-Boolean value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Define json variable.</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.414" endtime="20190809 21:01:05.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190809 21:01:05.415" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190809 21:01:05.415" endtime="20190809 21:01:05.415"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
<arg>pretty_print="Hello"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190809 21:01:05.416" level="INFO">To JSON using : content={
  "args": {
    "key_one": "true", 
    "key_two": "this is a test string"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.22.0"
  }, 
  "origin": "65.36.127.113, 65.36.127.113", 
  "url": "https://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}
 </msg>
<msg timestamp="20190809 21:01:05.416" level="INFO">To JSON using : pretty_print="Hello" </msg>
<msg timestamp="20190809 21:01:05.416" level="INFO">${output} = {
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Host": "http...</msg>
<status status="PASS" starttime="20190809 21:01:05.416" endtime="20190809 21:01:05.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190809 21:01:05.417" level="INFO">{
    "args": {
        "key_one": "true",
        "key_two": "this is a test string"
    },
    "headers": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Host": "httpbin.org",
        "User-Agent": "python-requests/2.22.0"
    },
    "origin": "65.36.127.113, 65.36.127.113",
    "url": "https://httpbin.org/get?key_one=true&amp;key_two=this+is+a+test+string"
}</msg>
<status status="PASS" starttime="20190809 21:01:05.416" endtime="20190809 21:01:05.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_one": "true"</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.417" endtime="20190809 21:01:05.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>"key_two": "this is a test string"</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.418" endtime="20190809 21:01:05.419"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>{u'key_two': u'this is a test string', u'key_one': u'true'}</arg>
</arguments>
<status status="PASS" starttime="20190809 21:01:05.420" endtime="20190809 21:01:05.420"></status>
</kw>
<tags>
<tag>json</tag>
</tags>
<status status="PASS" starttime="20190809 21:01:05.411" endtime="20190809 21:01:05.421" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="RequestsLibrary" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20190809 21:01:05.430" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20190809 21:01:05.427" endtime="20190809 21:01:05.440"></status>
</kw>
<status status="PASS" starttime="20190809 21:00:57.107" endtime="20190809 21:01:05.440"></status>
</suite>
<suite id="s1-s3" name="Simpletest" source="/opt/robotframework/tests/simpletest.robot">
<test id="s1-s3-t1" name="Visit Baidu">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>https://www.baidu.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20190809 21:01:05.700" level="INFO">Opening browser 'chrome' to base url 'https://www.baidu.com'.</msg>
<msg timestamp="20190809 21:01:14.726" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:56079\r\nAccept-Encoding: identity\r\nContent-Length: 295\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "platformName": "any", "goog:chromeOptions": {"extensions": [], "args": []}}}, "desiredCapabilities": {"browserName": "chrome", "version": "", "platform": "ANY", "goog:chromeOptions": {"extensions": [], "args": []}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 648
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/77ec77c7a971f1b5eeb95c06720d117e/timeouts HTTP/1.1\r\nHost: 127.0.0.1:56079\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/77ec77c7a971f1b5eeb95c06720d117e/timeouts HTTP/1.1\r\nHost: 127.0.0.1:56079\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/77ec77c7a971f1b5eeb95c06720d117e/url HTTP/1.1\r\nHost: 127.0.0.1:56079\r\nAccept-Encoding: identity\r\nContent-Length: 32\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://www.baidu.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:05.699" endtime="20190809 21:01:14.897"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20190809 21:01:15.449" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-46.png"&gt;&lt;img src="selenium-screenshot-46.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190809 21:01:15.450" level="INFO">send: b'GET /session/77ec77c7a971f1b5eeb95c06720d117e/screenshot HTTP/1.1\r\nHost: 127.0.0.1:56079\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 51580
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:15.040" endtime="20190809 21:01:15.450"></status>
</kw>
<status status="PASS" starttime="20190809 21:01:05.697" endtime="20190809 21:01:15.487" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Visit Bing">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>https://www.bing.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20190809 21:01:15.643" level="INFO">Opening browser 'chrome' to base url 'https://www.bing.com'.</msg>
<msg timestamp="20190809 21:01:21.368" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:60959\r\nAccept-Encoding: identity\r\nContent-Length: 295\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "platformName": "any", "goog:chromeOptions": {"extensions": [], "args": []}}}, "desiredCapabilities": {"browserName": "chrome", "version": "", "platform": "ANY", "goog:chromeOptions": {"extensions": [], "args": []}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 648
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/6a326ee07a511ff745e92f6ec89a6a44/timeouts HTTP/1.1\r\nHost: 127.0.0.1:60959\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/6a326ee07a511ff745e92f6ec89a6a44/timeouts HTTP/1.1\r\nHost: 127.0.0.1:60959\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/6a326ee07a511ff745e92f6ec89a6a44/url HTTP/1.1\r\nHost: 127.0.0.1:60959\r\nAccept-Encoding: identity\r\nContent-Length: 31\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://www.bing.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:15.635" endtime="20190809 21:01:21.368"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20190809 21:01:22.605" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-47.png"&gt;&lt;img src="selenium-screenshot-47.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190809 21:01:22.606" level="INFO">send: b'GET /session/6a326ee07a511ff745e92f6ec89a6a44/screenshot HTTP/1.1\r\nHost: 127.0.0.1:60959\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 2678308
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:21.369" endtime="20190809 21:01:22.606"></status>
</kw>
<status status="PASS" starttime="20190809 21:01:15.616" endtime="20190809 21:01:22.606" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Visit Google">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>https://www.google.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20190809 21:01:22.610" level="INFO">Opening browser 'chrome' to base url 'https://www.google.com'.</msg>
<msg timestamp="20190809 21:01:28.991" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:45773\r\nAccept-Encoding: identity\r\nContent-Length: 295\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "platformName": "any", "goog:chromeOptions": {"extensions": [], "args": []}}}, "desiredCapabilities": {"browserName": "chrome", "version": "", "platform": "ANY", "goog:chromeOptions": {"extensions": [], "args": []}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 648
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/e151d689e971a75119b3e915d51d991c/timeouts HTTP/1.1\r\nHost: 127.0.0.1:45773\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/e151d689e971a75119b3e915d51d991c/timeouts HTTP/1.1\r\nHost: 127.0.0.1:45773\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/e151d689e971a75119b3e915d51d991c/url HTTP/1.1\r\nHost: 127.0.0.1:45773\r\nAccept-Encoding: identity\r\nContent-Length: 33\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://www.google.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:22.609" endtime="20190809 21:01:28.991"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20190809 21:01:29.277" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-48.png"&gt;&lt;img src="selenium-screenshot-48.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190809 21:01:29.277" level="INFO">send: b'GET /session/e151d689e971a75119b3e915d51d991c/screenshot HTTP/1.1\r\nHost: 127.0.0.1:45773\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 52600
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:28.991" endtime="20190809 21:01:29.281"></status>
</kw>
<status status="PASS" starttime="20190809 21:01:22.607" endtime="20190809 21:01:29.281" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Visit Yahoo">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>https://search.yahoo.com</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20190809 21:01:29.285" level="INFO">Opening browser 'chrome' to base url 'https://search.yahoo.com'.</msg>
<msg timestamp="20190809 21:01:34.734" level="INFO">send: b'POST /session HTTP/1.1\r\nHost: 127.0.0.1:37623\r\nAccept-Encoding: identity\r\nContent-Length: 295\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "platformName": "any", "goog:chromeOptions": {"extensions": [], "args": []}}}, "desiredCapabilities": {"browserName": "chrome", "version": "", "platform": "ANY", "goog:chromeOptions": {"extensions": [], "args": []}}}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 648
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/fb727a18024229eebcb384683a074b46/timeouts HTTP/1.1\r\nHost: 127.0.0.1:37623\r\nAccept-Encoding: identity\r\nContent-Length: 16\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"script": 5000}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/fb727a18024229eebcb384683a074b46/timeouts HTTP/1.1\r\nHost: 127.0.0.1:37623\r\nAccept-Encoding: identity\r\nContent-Length: 15\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"implicit": 0}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache
send: b'POST /session/fb727a18024229eebcb384683a074b46/url HTTP/1.1\r\nHost: 127.0.0.1:37623\r\nAccept-Encoding: identity\r\nContent-Length: 35\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
send: b'{"url": "https://search.yahoo.com"}'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 14
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:29.285" endtime="20190809 21:01:34.735"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20190809 21:01:35.917" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-49.png"&gt;&lt;img src="selenium-screenshot-49.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20190809 21:01:35.917" level="INFO">send: b'GET /session/fb727a18024229eebcb384683a074b46/screenshot HTTP/1.1\r\nHost: 127.0.0.1:37623\r\nAccept-Encoding: identity\r\nAccept: application/json\r\nContent-Type: application/json;charset=UTF-8\r\nUser-Agent: selenium/3.141.0 (python linux)\r\nConnection: keep-alive\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
header: Content-Length: 1927348
header: Content-Type: application/json; charset=utf-8
header: cache-control: no-cache</msg>
<status status="PASS" starttime="20190809 21:01:34.735" endtime="20190809 21:01:35.917"></status>
</kw>
<status status="PASS" starttime="20190809 21:01:29.283" endtime="20190809 21:01:35.918" critical="yes"></status>
</test>
<status status="PASS" starttime="20190809 21:01:05.446" endtime="20190809 21:01:35.931"></status>
</suite>
<status status="PASS" starttime="20190809 21:00:56.315" endtime="20190809 21:01:35.981"></status>
</suite>
<statistics>
<total>
<stat pass="43" fail="0">Critical Tests</stat>
<stat pass="43" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0">delete</stat>
<stat pass="7" fail="0">faker</stat>
<stat pass="5" fail="0">get</stat>
<stat pass="1" fail="0">get-cert</stat>
<stat pass="3" fail="0">head</stat>
<stat pass="3" fail="0">json</stat>
<stat pass="2" fail="0">options</stat>
<stat pass="1" fail="0">patch</stat>
<stat pass="9" fail="0">post</stat>
<stat pass="6" fail="0">put</stat>
</tag>
<suite>
<stat pass="43" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="7" fail="0" id="s1-s1" name="Faker">Tests.Faker</stat>
<stat pass="32" fail="0" id="s1-s2" name="Requests">Tests.Requests</stat>
<stat pass="4" fail="0" id="s1-s3" name="Simpletest">Tests.Simpletest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
